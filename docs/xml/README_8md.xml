<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">##<sp/>[DisMech:<sp/>A<sp/>Discrete<sp/>Differential<sp/>Geometry-based<sp/>Physical<sp/>Simulator<sp/>for<sp/>Soft<sp/>Robots<sp/>and<sp/>Structures](http://dismech.github.io/)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&lt;div<sp/>style=&quot;text-align:<sp/>center;&quot;&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;table&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;td<sp/>align=&quot;center&quot;&gt;<sp/><sp/>&lt;img<sp/>src=&quot;media/dismech-logo.jpg&quot;<sp/>width=&quot;250&quot;&gt;<sp/><sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;Logo<sp/>&lt;/em&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;td<sp/>align=&quot;center&quot;&gt;<sp/><sp/>&lt;img<sp/>src=&quot;media/spider_incline.gif&quot;<sp/>width=&quot;500&quot;&gt;<sp/><sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;Spider<sp/>robot<sp/>dropped<sp/>onto<sp/>an<sp/>incline<sp/>&lt;/em&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;td<sp/>align=&quot;center&quot;<sp/>rowspan=&quot;2&quot;&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;img<sp/>src=&quot;media/active_entanglement_cropped.gif&quot;<sp/>width=&quot;250&quot;/&gt;<sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;<sp/>Active<sp/>entanglement<sp/>gripper<sp/>&lt;/em&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;td<sp/>align=&quot;center&quot;&gt;<sp/><sp/>&lt;img<sp/>src=&quot;media/helix.gif&quot;<sp/>width=&quot;500&quot;&gt;<sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;<sp/>Helix<sp/>oscillating<sp/>under<sp/>gravity<sp/>&lt;/em&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;td<sp/>align=&quot;center&quot;&gt;<sp/>&lt;img<sp/>src=&quot;media/real2sim.gif&quot;<sp/>width=&quot;500&quot;&gt;<sp/><sp/>&lt;br&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;em&gt;<sp/>Real2Sim<sp/>soft<sp/>manipulator<sp/>modelling<sp/>&lt;/em&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/td&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/table&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/div&gt;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[DisMech](http://dismech.github.io/)<sp/>is<sp/>a<sp/>discrete<sp/>differential<sp/>geometry-based<sp/>physical<sp/>simulator<sp/>for<sp/>elastic<sp/>rod-like<sp/>structures<sp/>and<sp/>soft<sp/>robots.</highlight></codeline>
<codeline><highlight class="normal">Based<sp/>on<sp/>the<sp/>[Discrete<sp/>Elastic<sp/>Rods](https://www.cs.columbia.edu/cg/pdfs/143-rods.pdf)<sp/>framework,<sp/>it<sp/>can<sp/>be<sp/>used<sp/>to<sp/>simulate<sp/>soft<sp/>structures<sp/>for<sp/>a<sp/>wide<sp/>variety<sp/>of<sp/>purposes<sp/>such<sp/>as<sp/>robotic<sp/>deformable<sp/>material<sp/>manipulation<sp/>and<sp/>soft<sp/>robot<sp/>control.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>TODO</highlight></codeline>
<codeline><highlight class="normal">If<sp/>you&apos;d<sp/>like<sp/>DisMech<sp/>to<sp/>support<sp/>a<sp/>new<sp/>feature,<sp/>feel<sp/>free<sp/>create<sp/>an<sp/>issue<sp/>and<sp/>we&apos;ll<sp/>add<sp/>it<sp/>to<sp/>the<sp/>list<sp/>here.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>High<sp/>priority</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>per-limb<sp/>friction<sp/>coefficient<sp/>logic.<sp/>PR<sp/>[#5](https://github.com/StructuresComp/dismech-rods/pull/5)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>active<sp/>entanglement<sp/>example<sp/>code.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>limb<sp/>self-contact<sp/>option.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>contact<sp/>logic<sp/>for<sp/>joints.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>URDF<sp/>functionality<sp/>for<sp/>instantiating<sp/>robot.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Low<sp/>priority</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Possibly<sp/>replace<sp/>floor<sp/>contact<sp/>force<sp/>(currently<sp/>uses<sp/>IMC)<sp/>with<sp/>modified<sp/>mass<sp/>method.<sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>detailed<sp/>documentation<sp/>for<sp/>all<sp/>examples.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>more<sp/>code<sp/>examples<sp/>for<sp/>initializing<sp/>limbs<sp/>and<sp/>joints.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>time<sp/>varying<sp/>boundary<sp/>condition<sp/>logic.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>more<sp/>controller<sp/>types.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[<sp/>]<sp/>Add<sp/>shell<sp/>functionality.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>COMPLETED</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Add<sp/>forward<sp/>Euler<sp/>integration<sp/>scheme.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[x]<sp/>Add<sp/>contact<sp/>logic<sp/>for<sp/>limbs.</highlight></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Dependencies</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>are<sp/>some<sp/>dependencies<sp/>required<sp/>prior<sp/>to<sp/>compilation.</highlight></codeline>
<codeline><highlight class="normal">Instructions<sp/>for<sp/>macOS<sp/>and<sp/>Ubuntu<sp/>are<sp/>similar<sp/>(presented<sp/>below).</highlight></codeline>
<codeline><highlight class="normal">For<sp/>other<sp/>operating<sp/>systems<sp/>you<sp/>should<sp/>be<sp/>able<sp/>to<sp/>modify<sp/>the<sp/>commands<sp/>below<sp/>appropriately.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>**macOS**:<sp/>Because<sp/>this<sp/>uses<sp/>the<sp/>MKL,<sp/>it&apos;s<sp/>not<sp/>certain<sp/>to<sp/>run<sp/>on<sp/>Apple<sp/>silicone.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**macOS**:<sp/>If<sp/>you&apos;re<sp/>running<sp/>a<sp/>mac,<sp/>it&apos;s<sp/>highly<sp/>recommended<sp/>you<sp/>use<sp/>a<sp/>package<sp/>manager<sp/>like<sp/>[MacPorts](https://www.macports.org/install.php)<sp/>or<sp/>[homebrew](https://brew.sh/).<sp/>Instructions<sp/>below<sp/>are<sp/>for<sp/>MacPorts.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>**Note**:<sp/>Some<sp/>of<sp/>these<sp/>packages<sp/>are<sp/>installed<sp/>to<sp/>the<sp/>system<sp/>library<sp/>for<sp/>convenience.<sp/>You<sp/>may<sp/>want<sp/>to<sp/>install<sp/>locally<sp/>to<sp/>e.g.,<sp/>`~/.local`<sp/>to<sp/>avoid<sp/>conflicts<sp/>with<sp/>system<sp/>libraries.<sp/>Add<sp/>the<sp/>`cmake`<sp/>flag:<sp/>`-D<sp/>CMAKE_INSTALL_PREFIX=~/.local`.<sp/>Then<sp/>`sudo`<sp/>is<sp/>not<sp/>required<sp/>to<sp/>install.<sp/>You&apos;ll<sp/>need<sp/>to<sp/>ensure<sp/>subsequent<sp/>builds<sp/>know<sp/>where<sp/>to<sp/>find<sp/>the<sp/>build<sp/>libraries.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>X11</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>An<sp/>X11<sp/>(xorg)<sp/>server<sp/>is<sp/>necessary<sp/>to<sp/>use<sp/>the<sp/>`freeglut`<sp/>library.<sp/>This<sp/>exists<sp/>already<sp/>on<sp/>Linux.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**macOS**:<sp/>This<sp/>can<sp/>be<sp/>installed<sp/>with<sp/>MacPorts:<sp/>`sudo<sp/>port<sp/>install<sp/>xorg-server`.<sp/>Then<sp/>log<sp/>out<sp/>and<sp/>back<sp/>in.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Eigen<sp/>3.4.0](http://eigen.tuxfamily.org/index.php?title=Main_Page)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Eigen<sp/>is<sp/>used<sp/>for<sp/>various<sp/>linear<sp/>algebra<sp/>operations.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**macOS**:<sp/>You<sp/>can<sp/>install<sp/>this<sp/>version<sp/>with<sp/>MacPorts:<sp/>`sudo<sp/>port<sp/>install<sp/>eigen3`.<sp/>Otherwise,<sp/>build<sp/>instructions<sp/>are<sp/>below.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>DisMech<sp/>is<sp/>built<sp/>with<sp/>Eigen<sp/>version<sp/>3.4.0<sp/>which<sp/>can<sp/>be<sp/>downloaded<sp/>[here](https://gitlab.com/libeigen/eigen/-/releases/3.4.0).<sp/>After<sp/>downloading<sp/>the<sp/>source<sp/>code,<sp/>install<sp/>through<sp/>cmake<sp/>as<sp/>follows.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>eigen-3.4.0<sp/>&amp;&amp;<sp/>mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sudo<sp/>make<sp/>install</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Flexible<sp/>Collision<sp/>Library<sp/>(FCL)](https://github.com/flexible-collision-library/fcl)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>The<sp/>FCL<sp/>library<sp/>is<sp/>used<sp/>to<sp/>perform<sp/>both<sp/>broadphase<sp/>and<sp/>narrowphase<sp/>collision<sp/>detection<sp/>with<sp/>each<sp/>discrete<sp/>rod<sp/>represented<sp/>as<sp/>a<sp/>chain<sp/>of<sp/>cylinders.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>FCL<sp/>depends<sp/>on<sp/>both<sp/>Eigen<sp/>(instructions<sp/>above)<sp/>and<sp/>[libccd](https://github.com/danfis/libccd).<sp/>Install<sp/>[libccd](https://github.com/danfis/libccd)<sp/>with<sp/>the<sp/>following<sp/>commands:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>clone<sp/>https://github.com/danfis/libccd</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>libccd/src</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>-j4</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sudo<sp/>make<sp/>install</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Next,<sp/>install<sp/>FCL<sp/>from<sp/>source<sp/>using<sp/>the<sp/>following<sp/>commands:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>clone<sp/>https://github.com/flexible-collision-library/fcl</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>fcl<sp/>&amp;&amp;<sp/>mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>-j4</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sudo<sp/>make<sp/>install</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[SymEngine](https://github.com/symengine/symengine)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>SymEngine<sp/>is<sp/>used<sp/>for<sp/>symbolic<sp/>differentiation<sp/>and<sp/>function<sp/>generation.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**macOS**:<sp/>SymEngine<sp/>with<sp/>LLVM<sp/>can<sp/>be<sp/>installed<sp/>with<sp/>MacPorts:<sp/>`sudo<sp/>port<sp/>install<sp/>symengine`.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Before<sp/>installing<sp/>SymEngine,<sp/>LLVM<sp/>is<sp/>required<sp/>which<sp/>can<sp/>be<sp/>installed<sp/>most<sp/>easily<sp/>via<sp/>a<sp/>package<sp/>manager:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>**Ubuntu**:<sp/>`sudo<sp/>apt-get<sp/>install<sp/>llvm`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>**macOS**:<sp/>`sudo<sp/>port<sp/>install<sp/>llvm-15`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Afterwards,<sp/>install<sp/>SymEngine<sp/>from<sp/>source<sp/>using<sp/>the<sp/>following<sp/>commands:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>clone<sp/>https://github.com/symengine/symengine</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>symengine<sp/>&amp;&amp;<sp/>mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cmake<sp/>-D<sp/>WITH_LLVM=on<sp/>-D<sp/>BUILD_BENCHMARKS=off<sp/>-D<sp/>BUILD_TESTS=off<sp/>..</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>-j4</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sudo<sp/>make<sp/>install</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**macOS**:<sp/>You&apos;ll<sp/>need<sp/>to<sp/>provide<sp/>the<sp/>LLVM<sp/>root<sp/>to<sp/>the<sp/>build<sp/>with<sp/>`-D<sp/>CMAKE_PREFIX_PATH=/opt/local/libexec/llvm-15`<sp/>(if<sp/>installed<sp/>via<sp/>MacPorts).</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Intel<sp/>oneAPI<sp/>Math<sp/>Kernel<sp/>Library<sp/>(oneMKL)](https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl-download.html?operatingsystem=linux&amp;distributions=webdownload&amp;options=online)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Necessary<sp/>for<sp/>access<sp/>to<sp/>Pardiso,<sp/>which<sp/>is<sp/>used<sp/>as<sp/>a<sp/>sparse<sp/>matrix<sp/>solver.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Intel<sp/>MKL<sp/>is<sp/>also<sp/>used<sp/>as<sp/>the<sp/>BLAS<sp/>/<sp/>LAPACK<sp/>backend<sp/>for<sp/>Eigen.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**macOS**:<sp/>Download<sp/>from<sp/>[Intel](https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl-download.html)<sp/>and<sp/>use<sp/>the<sp/>install<sp/>script.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**Ubuntu**:<sp/>Follow<sp/>the<sp/>below<sp/>steps.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>/tmp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>wget<sp/>https://registrationcenter-download.intel.com/akdlm/irc_nas/18483/l_onemkl_p_2022.0.2.136.sh</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>This<sp/>runs<sp/>an<sp/>installer,<sp/>simply<sp/>follow<sp/>the<sp/>instructions.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sudo<sp/>sh<sp/>./l_onemkl_p_2022.0.2.136.sh</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Add<sp/>the<sp/>following<sp/>to<sp/>your<sp/>.bashrc.<sp/>Change<sp/>the<sp/>directory<sp/>accordingly<sp/>if<sp/>your<sp/>MKL<sp/>version<sp/>is<sp/>different.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>export<sp/>MKLROOT=/opt/intel/oneapi/mkl/2022.0.2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[OpenGL<sp/>/<sp/>GLUT](https://www.opengl.org/)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>OpenGL<sp/>/<sp/>GLUT<sp/>is<sp/>used<sp/>for<sp/>rendering<sp/>the<sp/>knot<sp/>through<sp/>a<sp/>simple<sp/>graphic.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Simply<sp/>install<sp/>through<sp/>apt<sp/>package<sp/>manager:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>**Ubuntu**:<sp/>`sudo<sp/>apt-get<sp/>install<sp/>libglu1-mesa-dev<sp/>freeglut3-dev<sp/>mesa-common-dev`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>-<sp/>**macOS**:<sp/>`sudo<sp/>port<sp/>install<sp/>freeglut<sp/>pkgconfig`<sp/>(Note:<sp/>`pkgconfig`<sp/>is<sp/>necessary<sp/>to<sp/>avoid<sp/>finding<sp/>system<sp/>GLUT<sp/>instead<sp/>of<sp/>`freeglut`.)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Lapack<sp/>(*included<sp/>in<sp/>MKL*)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Running<sp/>Examples</highlight></codeline>
<codeline><highlight class="normal">DisMech<sp/>is<sp/>setup<sp/>so<sp/>that<sp/>simulation<sp/>environments<sp/>can<sp/>be<sp/>instantiated<sp/>using<sp/>a<sp/>single<sp/>cpp<sp/>file<sp/>called<sp/>`robotDescription.cpp`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Several<sp/>example<sp/>of<sp/>working<sp/>DisMech<sp/>simulations<sp/>can<sp/>be<sp/>seen<sp/>in<sp/>the<sp/>`examples/`<sp/>directory.</highlight></codeline>
<codeline><highlight class="normal">In<sp/>order<sp/>to<sp/>run<sp/>an<sp/>example,<sp/>copy<sp/>the<sp/>example<sp/>cpp<sp/>file<sp/>into<sp/>the<sp/>main<sp/>directory<sp/>and<sp/>then<sp/>compile<sp/>DisMech.</highlight></codeline>
<codeline><highlight class="normal">For<sp/>example,<sp/>using<sp/>the<sp/>cantilever<sp/>beam<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">cp<sp/>examples/cantilever_case/cantileverExample.cpp<sp/>robotDescription.cpp</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make<sp/>-j4</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>..</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">Afterwards,<sp/>simply<sp/>run<sp/>the<sp/>simulation<sp/>using<sp/>the<sp/>`dismech.sh`<sp/>script.</highlight></codeline>
<codeline><highlight class="normal">```bash</highlight></codeline>
<codeline><highlight class="normal">./dismech.sh</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>run<sp/>another<sp/>example,<sp/>simply<sp/>replace<sp/>the<sp/>`robotDescription.cpp`<sp/>file<sp/>and<sp/>recompile.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Creating<sp/>Custom<sp/>Simulation<sp/>Environments</highlight></codeline>
<codeline><highlight class="normal">In<sp/>case<sp/>you<sp/>want<sp/>to<sp/>create<sp/>a<sp/>custom<sp/>simulation<sp/>environment,<sp/>take<sp/>a<sp/>look<sp/>at<sp/>the<sp/>provided<sp/>examples<sp/>on<sp/>how<sp/>to<sp/>do<sp/>so.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Simulation<sp/>parameters<sp/>such<sp/>as<sp/>defining<sp/>the<sp/>soft<sp/>structure(s)<sp/>/<sp/>robot(s),<sp/>boundary<sp/>conditions,<sp/>forces,<sp/>and<sp/>logging<sp/>are<sp/>done<sp/>solely<sp/>in<sp/>`robotDescription.cpp`<sp/>so<sp/>that<sp/>large<sp/>recompiles<sp/>do<sp/>not<sp/>take<sp/>place.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>addition,<sp/>many<sp/>numerical<sp/>parameters<sp/>can<sp/>be<sp/>set<sp/>through<sp/>the<sp/>`simParams`<sp/>struct<sp/>shown<sp/>below<sp/>with<sp/>default<sp/>values<sp/>and<sp/>descriptions.<sp/>Note<sp/>that<sp/>parameters<sp/>with<sp/>a<sp/>`*`<sp/>have<sp/>additional<sp/>explanations<sp/>below.<sp/>Parameters<sp/>with<sp/>a<sp/>`^`<sp/>only<sp/>apply<sp/>when<sp/>an<sp/>implicit<sp/>numerical<sp/>integration<sp/>scheme<sp/>is<sp/>chosen<sp/>and<sp/>are<sp/>otherwise<sp/>ignored.</highlight></codeline>
<codeline><highlight class="normal">```c++</highlight></codeline>
<codeline><highlight class="normal">struct<sp/>simParams<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>sim_time<sp/>=<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Total<sp/>time<sp/>for<sp/>simulation<sp/>[s]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>dt<sp/>=<sp/>1e-3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Time<sp/>step<sp/>size<sp/>[s]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>render<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Live<sp/>OpenGL<sp/>rendering</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>show_mat_frames<sp/>=<sp/>false;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Render<sp/>material<sp/>frames</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>render_scale<sp/>=<sp/>1.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Rendering<sp/>scale</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>dtol<sp/>=<sp/>1e-2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>*^<sp/>Dynamics<sp/>tolerance<sp/>[m/s]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>double<sp/>ftol<sp/>=<sp/>1e-4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>*^<sp/>Force<sp/>tolerance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>max_iter<sp/>=<sp/>500;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>^<sp/><sp/>Maximum<sp/>iterations<sp/>for<sp/>a<sp/>time<sp/>step</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>adaptive_time_stepping<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>*^<sp/>Adaptive<sp/>time<sp/>stepping</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>cmd_line_per<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Command<sp/>line<sp/>sim<sp/>info<sp/>output<sp/>period</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>enable_2d_sim<sp/>=<sp/>false;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Lock<sp/>z<sp/>and<sp/>theta<sp/>DOFs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>line_search<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>^<sp/><sp/>Enable<sp/>line<sp/>search<sp/>method</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>numerical_integration_scheme<sp/>nis<sp/>=<sp/>BACKWARD_EULER;<sp/>//<sp/>*<sp/><sp/>Numerical<sp/>integration<sp/>scheme<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>debug_verbosity<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>Prints<sp/>certain<sp/>debug<sp/>statements<sp/></highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Detailed<sp/>parameter<sp/>explanations:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>`numerical_integration_scheme`<sp/>-<sp/>Determines<sp/>the<sp/>numerical<sp/>integration<sp/>scheme.<sp/>Currently,<sp/>available<sp/>options<sp/>are<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`FORWARD_EULER`:<sp/>https://en.wikipedia.org/wiki/Euler_method</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`VERLET_POSITION`:<sp/>https://en.wikipedia.org/wiki/Verlet_integration</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`BACKWARD_EULER`:<sp/>https://en.wikipedia.org/wiki/Backward_Euler_method</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`IMPLICIT_MIDPOINT`:<sp/>https://en.wikipedia.org/wiki/Midpoint_method</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`dtol`<sp/>-<sp/>A<sp/>dynamics<sp/>tolerance.<sp/>Considers<sp/>Newton&apos;s<sp/>method<sp/>to<sp/>converge<sp/>if<sp/>the<sp/>infinity<sp/>norm<sp/>of<sp/>the<sp/>DOF<sp/>update<sp/>divided<sp/>by<sp/>time<sp/>step<sp/>size<sp/>for<sp/>Cartesian<sp/>positions<sp/>is<sp/>less<sp/>than<sp/>`dtol`:<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$$\frac{||<sp/>\Delta<sp/>\mathbf<sp/>q<sp/>||_{\infty}}<sp/>{\Delta<sp/>t}<sp/>&lt;<sp/>\textrm{dtol}$$</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Note<sp/>that<sp/>we<sp/>ignore<sp/>$\theta$<sp/>DOFs<sp/>due<sp/>to<sp/>difference<sp/>in<sp/>scaling.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`ftol`<sp/>-<sp/>A<sp/>force<sp/>tolerance.<sp/>Considers<sp/>Newton&apos;s<sp/>method<sp/>to<sp/>converge<sp/>if<sp/>the<sp/>cumulative<sp/>force<sp/>norm<sp/>becomes<sp/>less<sp/>than<sp/>the<sp/>starting<sp/>force<sp/>norm<sp/>*<sp/>`ftol`.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>$$||<sp/>\mathbf<sp/>f<sp/>||<sp/>&lt;<sp/>||<sp/>\mathbf<sp/>f_0<sp/>||<sp/>*<sp/>\textrm{ftol}$$</highlight></codeline>
<codeline><highlight class="normal">-<sp/>`adaptive_time_stepping`<sp/>-<sp/>Turns<sp/>on<sp/>adaptive<sp/>time<sp/>stepping<sp/>which<sp/>halves<sp/>the<sp/>time<sp/>step<sp/>size<sp/>if<sp/>failure<sp/>to<sp/>converge<sp/>after<sp/>set<sp/>number<sp/>of<sp/>iterations.<sp/>Set<sp/>to<sp/>0<sp/>to<sp/>disable.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Citation</highlight></codeline>
<codeline><highlight class="normal">If<sp/>our<sp/>work<sp/>has<sp/>helped<sp/>your<sp/>research,<sp/>please<sp/>cite<sp/>the<sp/>following<sp/>paper.</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">@misc{choi2023dismech,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>title={DisMech:<sp/>A<sp/>Discrete<sp/>Differential<sp/>Geometry-based<sp/>Physical<sp/>Simulator<sp/>for<sp/>Soft<sp/>Robots<sp/>and<sp/>Structures},<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>author={Andrew<sp/>Choi<sp/>and<sp/>Ran<sp/>Jing<sp/>and<sp/>Andrew<sp/>Sabelhaus<sp/>and<sp/>Mohammad<sp/>Khalid<sp/>Jawed},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>year={2023},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eprint={2311.18126},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>archivePrefix={arXiv},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>primaryClass={cs.RO}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***</highlight></codeline>
<codeline><highlight class="normal">###<sp/>Acknowledgements</highlight></codeline>
<codeline><highlight class="normal">This<sp/>material<sp/>is<sp/>based<sp/>upon<sp/>work<sp/>supported<sp/>by<sp/>the<sp/>National<sp/>Science<sp/>Foundation.<sp/>Any<sp/>opinions,<sp/>findings,<sp/>and<sp/>conclusions<sp/>or<sp/>recommendations<sp/>expressed<sp/>in<sp/>this<sp/>material<sp/>are<sp/>those<sp/>of<sp/>the<sp/>author(s)<sp/>and<sp/>do<sp/>not<sp/>necessarily<sp/>reflect<sp/>the<sp/>views<sp/>of<sp/>the<sp/>National<sp/>Science<sp/>Foundation.</highlight></codeline>
    </programlisting>
    <location file="/home/radha/Desktop/dismech-rods-main/README.md"/>
  </compounddef>
</doxygen>
