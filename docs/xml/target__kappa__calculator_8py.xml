<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="target__kappa__calculator_8py" kind="file" language="Python">
    <compoundname>target_kappa_calculator.py</compoundname>
    <innernamespace refid="namespacetarget__kappa__calculator">target_kappa_calculator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pandas</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>plt</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">compute_kappa(v123):</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>v123[0]</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>v123[1]</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>v3<sp/>=<sp/>v123[2]</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>v2-v1</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>/=<sp/>np.linalg.norm(t0)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>v3-v2</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>/=<sp/>np.linalg.norm(t1)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0<sp/>*<sp/>np.cross(t0,<sp/>t1)<sp/>/<sp/>(1.0<sp/>+<sp/>t0.dot(t1))</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal">data<sp/>=<sp/>pandas.read_csv(</highlight><highlight class="stringliteral">&quot;soft_limb_data.csv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">tag_ids_x<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;tagid_x_10{}&quot;</highlight><highlight class="normal">.format(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>10)]</highlight></codeline>
<codeline lineno="21"><highlight class="normal">tag_ids_y<sp/>=<sp/>[</highlight><highlight class="stringliteral">&quot;tagid_y_10{}&quot;</highlight><highlight class="normal">.format(i)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,<sp/>10)]</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">x<sp/>=<sp/>np.asarray(data.loc[7:,<sp/>tag_ids_x])</highlight></codeline>
<codeline lineno="24"><highlight class="normal">z<sp/>=<sp/>-np.asarray(data.loc[7:,<sp/>tag_ids_y])</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">x<sp/>-=<sp/>x[0,<sp/>0]</highlight></codeline>
<codeline lineno="27"><highlight class="normal">z<sp/>-=<sp/>z[0,<sp/>0]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Time<sp/>step,<sp/>coordinate,<sp/>(x,<sp/>z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">pixel_coordinates<sp/>=<sp/>np.zeros((x.shape[0],<sp/>x.shape[1],<sp/>2))</highlight></codeline>
<codeline lineno="31"><highlight class="normal">pixel_coordinates[:,<sp/>:,<sp/>0]<sp/>=<sp/>x</highlight></codeline>
<codeline lineno="32"><highlight class="normal">pixel_coordinates[:,<sp/>:,<sp/>1]<sp/>=<sp/>z</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal">kappas<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>ts<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(pixel_coordinates):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>kappa1<sp/>=<sp/>(compute_kappa(ts)<sp/>+<sp/>compute_kappa(ts[1:])<sp/>+<sp/>compute_kappa(ts[2:]))<sp/>/<sp/>3</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>kappa2<sp/>=<sp/>(compute_kappa(ts[4:])<sp/>+<sp/>compute_kappa(ts[5:])<sp/>+<sp/>compute_kappa(ts[6:]))<sp/>/<sp/>3</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>kappas.append((kappa1,<sp/>kappa2))</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.plot(pixel_coordinates[i,<sp/>:,<sp/>0],<sp/>pixel_coordinates[i,<sp/>:,<sp/>1],<sp/>zorder=0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.scatter(x[i,<sp/>:4],<sp/>z[i,<sp/>:4],<sp/>zorder=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.scatter(x[i,<sp/>4],<sp/>z[i,<sp/>4],<sp/>zorder=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.scatter(x[i,<sp/>5:],<sp/>z[i,<sp/>5:],<sp/>zorder=1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.axis(&apos;equal&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.show()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.savefig(&quot;snap{}.png&quot;.format(i))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>plt.clf()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(</highlight><highlight class="stringliteral">&quot;target_kappas.pkl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>pickle.dump(kappas,<sp/>f)</highlight></codeline>
    </programlisting>
    <location file="/home/radha/Desktop/dismech-rods-main/examples/real2sim_case/target_kappa_calculator.py"/>
  </compounddef>
</doxygen>
